{"version":3,"sources":["firebase/config.js","redux/actions/loginAction.js","redux/actions/constants.js","components/header/header-component.jsx","redux/actions/saveActivityAction.js","pages/save-activity/save-activity-component.jsx","redux/actions/listActivityAction.js","components/search/search-component.jsx","components/loader/loader-component.jsx","pages/list-activity/list-activity-component.jsx","App.js","redux/reducers/saveActivityReducer.js","redux/reducers/listActivityReducer.js","redux/reducers/loginReducer.js","redux/reducers/index.js","redux/sagas/index.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","authentication","auth","provider","GoogleAuthProvider","firestore","loginBegin","user","type","payload","loginSuccess","connect","login","dispath","logout","isLoggedIn","className","to","onClick","signOut","then","signInWithPopup","result","uid","email","displayName","phoneNumber","photoURL","getActivityBegin","id","saveActivity","pending","error","activity","dispatch","beginSaveActivity","data","history","saveActivityBegin","beginGetActivity","props","useState","setActivity","description","setDescription","date","setDate","useEffect","match","params","onSubmit","event","preventDefault","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","success","value","placeholder","onChange","target","required","rows","newestOnTop","rtl","pauseOnFocusLoss","fetchActivitiesSuccess","fetchActivitiesFailure","filter","search","searchActivities","startDate","setStartDate","endDate","setEndDate","listActivity","activities","loading","fetchActivities","deleteActivity","deleteActivityBegin","map","key","push","window","confirm","onAuthStateChanged","console","log","path","render","exact","initialState","loginReducer","state","action","combineReducers","fetchActivity","searchActivity","getActivity","getLogin","mySaga","select","collection","orderBy","where","get","docRef","forEach","doc","put","update","add","userId","delete","exists","set","takeLatest","Boolean","location","hostname","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","saga","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"mYAeAA,IAASC,cAXc,CACnBC,OAAQ,0CACRC,WAAY,yCACZC,YAAa,gDACbC,UAAW,yBACXC,cAAe,qCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIZ,IAAMC,EAAiBV,IAASW,OAC1BC,EAAW,IAAIZ,IAASW,KAAKE,mBAG7BC,EAAYd,IAASc,Y,eClBrBC,EAAa,SAACC,GAAD,MAAW,CACnCC,KCeyB,cDdzBC,QAASF,IAGEG,EAAe,SAACH,GAAD,MAAW,CACrCC,KCW2B,gBDV3BC,QAASF,IEgEII,G,MAAAA,aAjBS,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACzB,OAAO,eACFA,MAIoB,SAAAC,GACzB,MAAO,CACLC,OADK,WAEHD,EFhD4B,CAChCL,KCI0B,kBC6CxBI,MAJK,SAICL,GACJM,EAAQP,EAAWC,QAKVI,EAlEA,SAAC,GAAmC,IAAjCI,EAAgC,EAAhCA,WAAYD,EAAoB,EAApBA,OAAQF,EAAY,EAAZA,MAmBpC,OACE,4BAAQI,UAAU,eAChB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAMC,GAAG,KAAT,qBAEF,yBAAKD,UAAU,YACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,YACZ,4BACE,kBAAC,IAAD,CAAMC,GAAG,WAAT,WAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,KAAT,SAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,IAAIC,QAnCA,WACvBH,EAEFd,EAAekB,UAAUC,MAAK,WAC5BN,OAGFb,EAAeoB,gBAAgBlB,GAAUiB,MAAK,SAACE,GAAY,IACjDf,EAASe,EAATf,KACR,GAAGA,EAAM,CAAC,IACAgB,EAAkDhB,EAAlDgB,IAAKC,EAA6CjB,EAA7CiB,MAAOC,EAAsClB,EAAtCkB,YAAaC,EAAyBnB,EAAzBmB,YAAaC,EAAYpB,EAAZoB,SAC9Cf,EAAM,CACJW,MAAKC,QAAOC,cAAaC,cAAaC,mBAwB7BZ,EAAa,SAAW,oB,eC3BhCa,G,MAAmB,SAACC,GAAD,MAAS,CACrCrB,KFJ8B,qBEK9BC,QAASoB,K,QCgIElB,G,MAAAA,aARS,SAAC,GAAoD,IAAD,IAAjDmB,aACzB,MAAO,CACLC,QAFwE,EAAjCA,QAGvCC,MAHwE,EAAxBA,MAIhDC,SAJwE,EAAjBA,aAXhC,SAACC,GAC1B,MAAO,CACLC,kBADK,SACaC,EAAMC,GACtBH,EDjI2B,SAACE,EAAMC,GAAP,MAAoB,CACjD7B,KFGiC,wBEFjCC,QAAS2B,EACTC,WC8HWC,CAAkBF,EAAMC,KAEnCE,iBAJK,SAIYV,GACfK,EAASN,EAAiBC,QAajBlB,EAzIM,SAAC6B,GAAW,IAAD,EACEC,mBAAS,IADX,mBACvBR,EADuB,KACbS,EADa,OAEQD,mBAAS,IAFjB,mBAEvBE,EAFuB,KAEVC,EAFU,OAGNH,mBAAS,IAHH,mBAGvBI,EAHuB,KAGjBC,EAHiB,KAK9BC,qBAAU,WACJP,EAAMP,UACRS,EAAYF,EAAMP,SAASA,UAC3BW,EAAeJ,EAAMP,SAASU,aAC9BG,EAAQN,EAAMP,SAASY,OAElBL,EAAMT,SACTS,EAAMD,iBAAiBC,EAAMQ,MAAMC,OAAOpB,MAG7C,CAACW,EAAMP,WAgDV,OACE,yBAAKjB,UAAU,mBACZwB,EAAMP,UAAYO,EAAMP,SAASJ,GAChC,gDAEA,qDAEF,0BAAMqB,SAzCW,SAACC,GACpBA,EAAMC,iBACFZ,EAAMP,UACRO,EAAML,kBACJ,CAAEF,WAAUU,cAAaE,OAAMhB,GAAIW,EAAMP,SAASJ,IAClDW,EAAMH,UAILG,EAAMT,SAAWS,EAAMR,MAC1BqB,IAAMrB,MAAMQ,EAAMR,MAAO,CACvBsB,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,KAGZnB,EAAY,IACZE,EAAe,IACfE,EAAQ,IACRO,IAAMS,QAAQ,+BAAgC,CAC5CR,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,OAYV,yBAAK7C,UAAU,cACb,2BACER,KAAK,OACLuD,MAAO9B,EACP+B,YAAY,iBACZC,SAnDkB,SAACd,GAC3BT,EAAYS,EAAMe,OAAOH,QAmDjBI,UAAQ,KAGZ,yBAAKnD,UAAU,cACb,8BACE+C,MAAOpB,EACPyB,KAAK,IACLJ,YAAY,6BACZC,SApEwB,SAACd,GACjCP,EAAeO,EAAMe,OAAOH,QAoEpBI,UAAQ,KAGZ,yBAAKnD,UAAU,cACb,2BACER,KAAK,OACLyD,SAvEiB,SAACd,GAC1BL,EAAQK,EAAMe,OAAOH,QAuEbI,UAAQ,EACRJ,MAAOlB,KAGX,yBAAK7B,UAAU,cACb,gCACGwB,EAAMP,UAAYO,EAAMP,SAASJ,GAAK,SAAW,YAIxD,kBAAC,IAAD,CACEyB,SAAS,aACTC,UAAW,IACXC,iBAAiB,EACjBa,aAAa,EACbZ,cAAY,EACZa,KAAK,EACLC,kBAAgB,EAChBZ,WAAS,EACTD,cAAY,SCpHPc,EAAyB,SAACpC,GAAD,MAAW,CAC7C5B,KJNoC,2BIOpCC,QAAS2B,IAGAqC,EAAyB,SAACzC,GAAD,MAAY,CAC9CxB,KJVoC,2BIWpCC,QAASuB,IC2DErB,G,MAAAA,YAAQ,MARI,SAACuB,GAC1B,MAAO,CACLwC,OADK,SACEC,GACLzC,EDnD0B,SAACyC,GAAD,MAAa,CACzCnE,KJb2B,kBIc3BC,QAASkE,GCiDEC,CAAiBD,QAKjBhE,EAnEA,SAAC6B,GAAW,IAAD,EACQC,mBAAS,IADjB,mBACjBR,EADiB,KACPS,EADO,OAEUD,mBAAS,IAFnB,mBAEjBoC,EAFiB,KAENC,EAFM,OAGMrC,mBAAS,IAHf,mBAGjBsC,EAHiB,KAGRC,EAHQ,KAuBxB,OACE,yBAAKhE,UAAU,UACb,sDACA,0BAAMkC,SARW,SAACC,GACpBA,EAAMC,iBACNZ,EAAMkC,OAAO,CAAEzC,WAAU4C,YAAWE,cAOhC,yBAAK/D,UAAU,cACb,2BACER,KAAK,SACLwD,YAAY,qBACZD,MAAO9B,EACPgC,SA1BmB,SAACd,GAC5BT,EAAYS,EAAMe,OAAOH,WA4BrB,yBAAK/C,UAAU,cACb,2BACER,KAAK,OACLwD,YAAY,uBACZD,MAAOc,EACPZ,SA9BoB,SAACd,GAC7B2B,EAAa3B,EAAMe,OAAOH,WAgCtB,yBAAK/C,UAAU,cACb,2BACER,KAAK,OACLwD,YAAY,qBACZD,MAAOgB,EACPd,SAlCkB,SAACd,GAC3B6B,EAAW7B,EAAMe,OAAOH,WAoCpB,yBAAK/C,UAAU,cACb,iDCtDK,G,MAAA,kBACb,yBAAKA,UAAU,YACb,8BACA,8BACA,8BACA,iCCsHWL,G,MAAAA,aAxBS,SAAC,GAElB,IAAD,IADJsE,aAEA,MAAO,CACLC,WAFE,EADYA,WAIdlD,MAHE,EADwBA,MAK1BmD,QAJE,EAD+BA,QAMjCpD,QALE,EADwCA,YAUnB,SAACG,GAC1B,MAAO,CACLkD,gBADK,WAEHlD,EHlHqC,CACvC1B,KJHkC,4BOsHlC6E,eAJK,SAIUxD,GACbK,EHlG6B,SAACL,GAAD,MAAS,CACxCrB,KJZiC,wBIajCC,QAASoB,GGgGEyD,CAAoBzD,KAE/BU,iBAPK,SAOYV,GACfK,EAASN,EAAiBC,QAIjBlB,EAhHM,SAAC6B,GAKpB,OAJAO,qBAAU,WACRP,EAAM4C,oBACL,IAGD,yBAAKpE,UAAU,iBACZwB,EAAM2C,SAAW,kBAAC,EAAD,MAClB,kBAAC,EAAD,MACA,kDACA,yBAAKnE,UAAU,sBACb,yBAAKA,UAAU,OAAf,kBACA,yBAAKA,UAAU,OAAf,eACA,yBAAKA,UAAU,OAAf,iBACA,yBAAKA,UAAU,OAAf,WACCwB,EAAM0C,YACL1C,EAAM0C,WAAWK,KAAI,SAACtD,GACpB,OACE,kBAAC,WAAD,CAAUuD,IAAKvD,EAASJ,IACtB,6BAAMI,EAASA,UACf,6BAAMA,EAASU,aACf,6BAAMV,EAASY,MACf,yBAAK7B,UAAU,SACb,kBAAC,IAAD,CACEC,GAAG,IACHC,QAAS,WACPsB,EAAMD,iBAAiBN,EAASJ,IAChCW,EAAMH,QAAQoD,KAAd,gBAA4BxD,EAASJ,OAJzC,SAOS,KAET,kBAAC,IAAD,CACEZ,GAAG,IACHC,QAAS,WAELwE,OAAOC,QACL,oDAIFnD,EAAM6C,eAAepD,EAASJ,KACzBW,EAAMT,SAAWS,EAAMR,MAC1BqB,IAAMrB,MAAMQ,EAAMR,MAAO,CACvBsB,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAGZR,IAAMS,QAAQ,iCAAkC,CAC9CR,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,OA5BpB,gBAyCZ,kBAAC,IAAD,CACEP,SAAS,aACTC,UAAW,IACXC,iBAAiB,EACjBa,aAAa,EACbZ,cAAY,EACZa,KAAK,EACLC,kBAAgB,EAChBZ,WAAS,EACTD,cAAY,S,MC5CpB,IAae/C,eAbS,SAAC,GACvB,MAAO,CACLI,WAFmC,EAAZH,MAELG,eAIK,SAACmB,GAC1B,MAAO,CACLtB,MADK,SACCL,GACJ2B,EAAS5B,EAAWC,QAIXI,EAvDf,YAAqC,IAAtBI,EAAqB,EAArBA,WAAYH,EAAS,EAATA,MAmBzB,OAlBAmC,qBAAU,WACR9C,EAAe2F,oBAAmB,SAAUrF,GACtCA,EAEFK,EAAM,CACJY,MAAOjB,EAAKiB,MACZC,YAAalB,EAAKkB,YAClBC,YAAanB,EAAKmB,YAClBH,IAAKhB,EAAKgB,MAMZsE,QAAQC,IAAI,8BAGhB,IAEA,kBAAC,IAAD,KACE,yBAAK9E,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,CACE+E,KAAK,UACLC,OAAQ,SAACxD,GAAD,OAAYzB,EAAa,kBAAC,EAAiByB,GAAW,+CAEhE,kBAAC,IAAD,CACEyD,OAAK,EACLF,KAAK,IACLC,OAAQ,SAACxD,GAAD,OAAYzB,EAAa,kBAAC,EAAiByB,GAAW,+CAEhE,kBAAC,IAAD,CACEyD,OAAK,EACLF,KAAK,YACLC,OAAQ,SAACxD,GAAD,OAAYzB,EAAa,kBAAC,EAAiByB,GAAY,oD,QCpCnE0D,EAAe,CACnBlE,MAAO,GACPD,SAAS,EACTE,SAAU,MCFNiE,EAAe,CACnBhB,WAAY,GACZlD,MAAO,GACPmD,SAAS,EACTpD,SAAS,GCRLmE,EAAe,CACnBnF,YAAY,EACZR,KAAM,KACNwB,SAAS,EACTC,MAAO,MAmCMmE,EAhCM,WAAmC,IAAlCC,EAAiC,uDAAzBF,EAAcG,EAAW,uCACrD,OAAQA,EAAO7F,MACb,IXGuB,cWFvB,IXMwB,eWLtB,OAAO,2BACF4F,GADL,IAEE7F,KAAM,KACNwB,SAAS,EACThB,YAAY,EACZiB,MAAO,KAEX,IXLyB,gBWMvB,OAAO,2BACFoE,GADL,IAEE7F,KAAM8F,EAAO5F,QACbsB,SAAS,EACThB,YAAY,EACZiB,MAAO,KAEX,IXZyB,gBWavB,OAAO,2BACFoE,GADL,IAEEpE,MAAOqE,EAAO5F,QACdsB,SAAS,EACThB,YAAY,EACZR,KAAM,OAEV,QACE,OAAO6F,ICpCEE,cAAgB,CAC7BxE,aHSa,WAAyC,IAA/BsE,EAA8B,uDAAtBF,EAAcG,EAAQ,uCACrD,OAAQA,EAAO7F,MACb,ITXiC,wBSYjC,ITJ8B,qBSK5B,OAAO,2BACF4F,GADL,IAEEpE,MAAO,GACPD,SAAS,EACTE,SAAU,KAEd,ITjBmC,0BSkBnC,ITVgC,uBSW9B,OAAO,2BACFmE,GADL,IAEEpE,MAAOqE,EAAO5F,QACdsB,SAAS,IAEb,ITzBmC,0BS0BjC,OAAO,2BACFqE,GADL,IAEEpE,MAAO,GACPD,SAAS,EACTE,SAAU,KAEd,ITxBgC,uBSyB9B,OAAO,2BACFmE,GADL,IAEEpE,MAAO,GACPD,SAAS,EACTE,SAAUoE,EAAO5F,UAGrB,QACE,OAAO2F,IGzCXnB,aFUa,WAAyC,IAA/BmB,EAA8B,uDAAtBF,EAAcG,EAAQ,uCACrD,OAAQA,EAAO7F,MACb,IVf2B,kBUoB3B,IVxBkC,yBUyBhC,OAAO,2BACF4F,GADL,IAEEjB,SAAS,IAEb,IV5BoC,2BU6BlC,OAAO,2BACFiB,GADL,IAEElB,WAAYmB,EAAO5F,QACnBuB,MAAO,GACPmD,SAAS,IAGb,IVnCoC,2BUoClC,OAAO,2BACFiB,GADL,IAEElB,WAAY,GACZlD,MAAOqE,EAAO5F,QACd0E,SAAS,IAGb,IVnCiC,wBUoC/B,OAAO,2BACFiB,GADL,IAEEjB,SAAS,EACTnD,MAAO,GACPD,SAAS,IAGb,IV1CmC,0BU2CjC,IAAMmD,EAAakB,EAAMlB,WAAWR,QAAO,SAACzC,GAC1C,OAAOA,EAASJ,KAAOwE,EAAO5F,WAEhC,OAAO,2BACF2F,GADL,IAEEjB,SAAS,EACTnD,MAAO,GACPkD,aACAnD,SAAS,IAGb,IVrDmC,0BUsDjC,OAAO,2BACFqE,GADL,IAEEjB,SAAS,EACTnD,MAAOqE,EAAO5F,QACdsB,SAAS,IAEb,QACE,OAAOqE,IEjEXxF,U,2CCiBQ2F,G,WAoBAzE,G,WA4BA0E,G,WA6BAnB,G,WAYAoB,G,WASAC,G,WAiBAC,GAnHV,SAAUJ,IAAV,6EAEkB,OAFlB,kBAEwBK,cAFxB,OAImB,OAFTR,EAFV,OAG2B7E,EAAU6E,EAAzBxF,MAAQL,KAAOgB,IAH3B,SAIyBlB,EAClBwG,WAAW,cACXC,QAAQ,OAAQ,QAChBC,MAAM,SAAU,KAAMxF,GACtByF,MARP,OAcI,OAVMC,EAJV,OASU/B,EAAa,GACnB+B,EAAOC,SAAQ,SAACC,GACd,IAAMlF,EAAWkF,EAAI/E,OACrB8C,EAAWO,KAAX,aAAkB5D,GAAIsF,EAAItF,IAAOI,OAZvC,UAcUmF,YAAI5C,EAAuBU,IAdrC,gCAgBI,OAhBJ,oCAgBUkC,YAAI3C,EAAuB,EAAD,KAhBpC,sDAoBA,SAAU3C,EAAV,kFAEkB,OAFOrB,EAAzB,EAAyBA,QAAS4B,EAAlC,EAAkCA,QAAlC,kBAEwBuE,cAFxB,UAEUR,EAFV,OAG2B7E,EAAU6E,EAAzBxF,MAAQL,KAAOgB,KACnBd,EAAQoB,GAJhB,iBAMqB,OANrB,SAM2BxB,EAAUwG,WAAW,cAAcM,IAAI1G,EAAQoB,IAN1E,OAOM,OADMoF,EANZ,iBAOYA,EAAOI,OAAO,CAClBpF,SAAUxB,EAAQwB,SAClBU,YAAalC,EAAQkC,YACrBE,KAAMpC,EAAQoC,OAVtB,gCAcM,OAdN,UAcYxC,EAAUwG,WAAW,cAAcS,IAAI,CAC3CrF,SAAUxB,EAAQwB,SAClBU,YAAalC,EAAQkC,YACrBE,KAAMpC,EAAQoC,KACd0E,OAAQhG,IAlBhB,QAqBI,OArBJ,UAqBU6F,YX1DgC,CACtC5G,KFFmC,4BasCvC,QAsBI6B,EAAQoD,KAAK,KAtBjB,wBAwBI,OAxBJ,oCAwBU2B,YXzDqC,CAC3C5G,KFLmC,0BEMnCC,QWuD8B,EAAD,KAxBjC,sDA4BA,SAAU+F,EAAV,wFAEkB,OAFS/F,EAA3B,EAA2BA,QAA3B,kBAEwBmG,cAFxB,OAiBa,OAfHR,EAFV,OAG2B7E,EAAU6E,EAAzBxF,MAAQL,KAAOgB,IAEfsD,EAAiCpE,EAAjCoE,UAAWE,EAAsBtE,EAAtBsE,QAAS9C,EAAaxB,EAAbwB,SACxBgF,EAAS5G,EAAUwG,WAAW,cAE9BhC,IACFoC,EAASA,EAAOF,MAAM,OAAQ,KAAMlC,IAElCE,IACFkC,EAASA,EAAOF,MAAM,OAAQ,KAAMhC,IAElC9C,IACFgF,EAASA,EAAOF,MAAM,WAAY,KAAM9E,IAf9C,UAiBmBgF,EAAOF,MAAM,SAAU,KAAMxF,GAAKyF,MAjBrD,QAuBI,OANAC,EAjBJ,OAkBU/B,EAAa,GACnB+B,EAAOC,SAAQ,SAACC,GACd,IAAMlF,EAAWkF,EAAI/E,OACrB8C,EAAWO,KAAKxD,MArBtB,UAuBUmF,YAAI5C,EAAuBU,IAvBrC,gCAyBI,OAzBJ,oCAyBUkC,YAAI3C,EAAuB,EAAD,KAzBpC,sDA6BA,SAAUY,EAAejD,GAAzB,yEAEkB,OAFlB,kBAEwBwE,cAFxB,OAKI,OAHMR,EAFV,OAG2B7E,EAAU6E,EAAzBxF,MAAQL,KAAOgB,IAH3B,SAKUlB,EAAUwG,WAAW,cAAcM,IAAI/E,EAAK3B,SAASsG,MAAM,SAAU,KAAMxF,GAAKiG,SAL1F,OAMI,OANJ,SAMUJ,YTlFoC,CAC1C5G,KJhBmC,0BIiBnCC,QSgFgC2B,EAAK3B,UANzC,+BAQI,OARJ,oCAQU2G,YT/EuC,CAC7C5G,KJpBmC,0BIqBnCC,QS6EgC,EAAD,KARnC,sDAYA,SAAUgG,EAAV,4EAEmB,OAFKhG,EAAxB,EAAwBA,QAAxB,kBAEyBJ,EAAUwG,WAAW,cAAcM,IAAI1G,GAASuG,MAFzE,OAGI,OADMC,EAFV,gBAGUG,YX/FqC,CAC3C5G,KFRgC,uBEShCC,QW6F6B,2BAAKwG,EAAO7E,QAAb,IAAqBP,GAAIoF,EAAOpF,OAHhE,8BAKI,OALJ,mCAKUuF,YX5FkC,CACxC5G,KFZgC,uBEahCC,QW0F6B,EAAD,KALhC,qDASA,SAAUiG,EAAV,0EAEiB,OAFIjG,EAArB,EAAqBA,QAArB,kBAEuBJ,EAAUwG,WAAW,SAASM,IAAI1G,EAAQc,KAAKyF,MAFtE,iBAGcS,OAHd,gBAIM,OAJN,SAIYpH,EAAUwG,WAAW,SAASM,IAAI1G,EAAQc,KAAKmG,IAAI,CACvDlG,MAAOf,EAAQe,MACfC,YAAahB,EAAQgB,YACrBC,YAAajB,EAAQiB,YACrBC,SAAUlB,EAAQkB,WAR1B,OAYI,OAZJ,UAYUyF,YAAI1G,EAAaD,IAZ3B,gCAcI,OAdJ,oCAcU2G,Yd7H8B,CACtC5G,KCO2B,gBDN3BC,Qc2HyB,EAAD,KAd1B,sDAiBA,SAAUkG,IAAV,iEACE,OADF,SACQgB,Yb7I8B,yBa6IKpB,GAD3C,OAEE,OAFF,SAEQoB,YbxI6B,wBawIK7F,GAF1C,OAGE,OAHF,SAGQ6F,Yb3IuB,kBa2IKnB,GAHpC,OAIE,OAJF,SAIQmB,YbtI6B,wBasIKtC,GAJ1C,OAKE,OALF,UAKQsC,YbnI0B,qBamIKlB,GALvC,QAME,OANF,UAMQkB,YbhImB,cagIKjB,GANhC,wCASeC,Q,MCzIKiB,QACW,cAA7BlC,OAAOmC,SAASC,UAEe,UAA7BpC,OAAOmC,SAASC,UAEhBpC,OAAOmC,SAASC,SAAS9E,MACvB,2DCPN,IAAM+E,GAAiBC,cAEjBC,GAAQC,YAAYC,EAAaC,YAAgBL,KAEvDA,GAAeM,IAAIC,GAEnBC,IAASvC,OACP,kBAAC,IAAD,CAAUiC,MAAOA,IACf,kBAAC,IAAMO,WAAP,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SD4GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzH,MAAK,SAAA0H,GACJA,EAAaC,gBAEdC,OAAM,SAAAhH,GACL6D,QAAQ7D,MAAMA,EAAMiH,c","file":"static/js/main.fc36fda4.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyC7-JUbYt0bWhBq9BQmpJ10dmxMd2EE5wE\",\r\n    authDomain: \"activity-tracker-4c465.firebaseapp.com\",\r\n    databaseURL: \"https://activity-tracker-4c465.firebaseio.com\",\r\n    projectId: \"activity-tracker-4c465\",\r\n    storageBucket: \"activity-tracker-4c465.appspot.com\",\r\n    messagingSenderId: \"219528396381\",\r\n    appId: \"1:219528396381:web:083709e734ae7c209e57b4\",\r\n    measurementId: \"G-T2XCKXQV3T\"\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const authentication = firebase.auth();\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n\r\nexport const firestore = firebase.firestore();\r\n","import { LOGIN_BEGIN, LOGIN_SUCCESS, LOGIN_FAILURE, LOGOUT_BEGIN } from \"./constants\";\r\n\r\nexport const loginBegin = (user) => ({\r\n  type: LOGIN_BEGIN,\r\n  payload: user,\r\n});\r\n\r\nexport const loginSuccess = (user) => ({\r\n  type: LOGIN_SUCCESS,\r\n  payload: user,\r\n});\r\n\r\nexport const loginFailure = (error) => ({\r\n  type: LOGIN_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const logoutBegin = () => ({\r\n  type: LOGOUT_BEGIN,\r\n})","export const FETCH_ACTIVITIES_BEGIN = 'FETCH_ACTIVITIES_BEGIN';\r\nexport const FETCH_ACTIVITIES_SUCCESS = 'FETCH_ACTIVITIES_SUCCESS';\r\nexport const FETCH_ACTIVITIES_FAILURE = 'FETCH_ACTIVITIES_FAILURE';\r\n\r\nexport const SEARCH_ACTIVITY = 'SEARCH_ACTIVITY';\r\n\r\nexport const SAVE_ACTIVITIES_BEGIN = 'SAVE_ACTIVITIES_BEGIN';\r\nexport const SAVE_ACTIVITIES_SUCCESS = 'SAVE_ACTIVITIES_SUCCESS';\r\nexport const SAVE_ACTIVITIES_FAILURE = 'SAVE_ACTIVITIES_FAILURE';\r\n\r\nexport const DELETE_ACTIVITY_BEGIN = 'DELETE_ACTIVITY_BEGIN';\r\nexport const DELETE_ACTIVITY_SUCCESS = 'DELETE_ACTIVITY_SUCCESS';\r\nexport const DELETE_ACTIVITY_FAILURE = 'DELETE_ACTIVITY_FAILURE';\r\n\r\nexport const GET_ACTIVITY_BEGIN = 'GET_ACTIVITY_BEGIN';\r\nexport const GET_ACTIVITY_SUCCESS = 'GET_ACTIVITY_SUCCESS';\r\nexport const GET_ACTIVITY_FAILURE = 'GET_ACTIVITY_FAILURE';\r\n\r\nexport const LOGIN_BEGIN = 'LOGIN_BEGIN';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\r\n\r\nexport const LOGOUT_BEGIN = 'LOGOUT_BEGIN';\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { provider, authentication } from \"firebase/config\";\r\nimport { logoutBegin, loginBegin } from 'redux/actions/loginAction';\r\nimport \"components/header/header-styles.scss\";\r\n\r\nconst Header = ({ isLoggedIn, logout, login }) => {\r\n  const handleAuthentication = () => {\r\n    if (isLoggedIn) {\r\n      // handle logout\r\n      authentication.signOut().then(() => {\r\n        logout();\r\n      })\r\n    } else {\r\n      authentication.signInWithPopup(provider).then((result) => {\r\n        const { user } = result;\r\n        if(user) {\r\n          const { uid, email, displayName, phoneNumber, photoURL} = user;\r\n          login({\r\n            uid, email, displayName, phoneNumber, photoURL\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <header className=\"main-header\">\r\n      <div className=\"container\">\r\n        <div className=\"header-inner-wrap\">\r\n          <div className=\"logo-wrap\">\r\n            <Link to=\"/\">Activity Tracker</Link>\r\n          </div>\r\n          <nav className=\"main-nav\">\r\n            <div className=\"menu-wrap\">\r\n              <ul className=\"nav-menu\">\r\n                <li>\r\n                  <Link to=\"/create\">Create</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/\">List</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to='#' onClick={handleAuthentication}>\r\n                    {isLoggedIn ? \"LogOut\" : \"Login\"}\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ login }) => {\r\n  return {\r\n    ...login,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispath => {\r\n  return {\r\n    logout() {\r\n      dispath(logoutBegin());\r\n    },\r\n    login(user) {\r\n      dispath(loginBegin(user));\r\n    }\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import { SAVE_ACTIVITIES_BEGIN, SAVE_ACTIVITIES_SUCCESS, SAVE_ACTIVITIES_FAILURE, GET_ACTIVITY_BEGIN, GET_ACTIVITY_SUCCESS, GET_ACTIVITY_FAILURE } from 'redux/actions/constants'\r\n\r\nexport const saveActivityBegin = (data, history) => ({\r\n    type: SAVE_ACTIVITIES_BEGIN,\r\n    payload: data,\r\n    history,\r\n})\r\n\r\nexport const saveActivitySuccess = () => ({\r\n    type: SAVE_ACTIVITIES_SUCCESS, \r\n})\r\n\r\nexport const saveActivityFailure = (error) => ({\r\n    type: SAVE_ACTIVITIES_FAILURE, \r\n    payload: error\r\n})\r\n\r\nexport const getActivityBegin = (id) => ({\r\n    type: GET_ACTIVITY_BEGIN,\r\n    payload: id\r\n});\r\n\r\nexport const getActivitySuccess = activity => ({\r\n    type: GET_ACTIVITY_SUCCESS,\r\n    payload: activity\r\n})\r\n\r\nexport const getActivityFailure = error => ({\r\n    type: GET_ACTIVITY_FAILURE,\r\n    payload: error\r\n})","import React, { useState, useEffect } from \"react\";\r\nimport \"pages/save-activity/save-activity-styles.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getActivityBegin,\r\n  saveActivityBegin,\r\n} from \"redux/actions/saveActivityAction\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst SaveActivity = (props) => {\r\n  const [activity, setActivity] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (props.activity) {\r\n      setActivity(props.activity.activity);\r\n      setDescription(props.activity.description);\r\n      setDate(props.activity.date);\r\n    } else {\r\n      if (!props.pending) {\r\n        props.beginGetActivity(props.match.params.id);\r\n      }\r\n    }\r\n  }, [props.activity]);\r\n\r\n  const handleActivityDescription = (event) => {\r\n    setDescription(event.target.value);\r\n  };\r\n\r\n  const handleActivityDate = (event) => {\r\n    setDate(event.target.value);\r\n  };\r\n\r\n  const handleActivityTitle = (event) => {\r\n    setActivity(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (props.activity) {\r\n      props.beginSaveActivity(\r\n        { activity, description, date, id: props.activity.id },\r\n        props.history\r\n      );\r\n    }\r\n\r\n    if (!props.pending && props.error) {\r\n      toast.error(props.error, {\r\n        position: \"top-center\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } else {\r\n      setActivity(\"\");\r\n      setDescription(\"\");\r\n      setDate(\"\");\r\n      toast.success(\"Activity saved successfully!\", {\r\n        position: \"top-center\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"create-activity\">\r\n      {props.activity && props.activity.id ? (\r\n        <h3>Edit an Activity</h3>\r\n      ) : (\r\n        <h3>Create a New Activity</h3>\r\n      )}\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            value={activity}\r\n            placeholder=\"Enter Activity\"\r\n            onChange={handleActivityTitle}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            value={description}\r\n            rows=\"6\"\r\n            placeholder=\"Enter Activity Description\"\r\n            onChange={handleActivityDescription}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"date\"\r\n            onChange={handleActivityDate}\r\n            required\r\n            value={date}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button>\r\n            {props.activity && props.activity.id ? \"UPDATE\" : \"CREATE\"}\r\n          </button>\r\n        </div>\r\n      </form>\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    beginSaveActivity(data, history) {\r\n      dispatch(saveActivityBegin(data, history));\r\n    },\r\n    beginGetActivity(id) {\r\n      dispatch(getActivityBegin(id));\r\n    },\r\n  };\r\n};\r\n\r\nconst mapStateToProps = ({ saveActivity: { pending, error, activity } }) => {\r\n  return {\r\n    pending,\r\n    error,\r\n    activity,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SaveActivity);\r\n","import {FETCH_ACTIVITIES_BEGIN, FETCH_ACTIVITIES_SUCCESS, FETCH_ACTIVITIES_FAILURE, SEARCH_ACTIVITY, DELETE_ACTIVITY_BEGIN, DELETE_ACTIVITY_FAILURE, DELETE_ACTIVITY_SUCCESS} from 'redux/actions/constants';\r\n\r\nexport const fetchActivitiesBegin = () => ({\r\n    type: FETCH_ACTIVITIES_BEGIN,\r\n})\r\n\r\nexport const fetchActivitiesSuccess = (data) => ({\r\n    type: FETCH_ACTIVITIES_SUCCESS,\r\n    payload: data\r\n});\r\n\r\nexport const fetchActivitiesFailure = (error) => ({\r\n    type: FETCH_ACTIVITIES_FAILURE,\r\n    payload: error\r\n})\r\n\r\nexport const searchActivities = (search) => ({\r\n    type: SEARCH_ACTIVITY, \r\n    payload: search\r\n});\r\n\r\nexport const deleteActivityBegin = (id) => ({\r\n    type: DELETE_ACTIVITY_BEGIN, \r\n    payload: id\r\n})\r\n\r\nexport const deleteActivitySuccess = (id) => ({\r\n    type: DELETE_ACTIVITY_SUCCESS, \r\n    payload: id\r\n})\r\n\r\nexport const deleteActivityFailure = (error) => ({\r\n    type: DELETE_ACTIVITY_FAILURE, \r\n    payload: error\r\n})","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { searchActivities } from \"redux/actions/listActivityAction\";\r\nimport \"components/search/search-styles.scss\";\r\n\r\nconst Search = (props) => {\r\n  const [activity, setActivity] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n\r\n\r\n  const handleActivityChange = (event) => {\r\n    setActivity(event.target.value);\r\n  };\r\n  \r\n  const handleStartDateChange = (event) => {\r\n    setStartDate(event.target.value);\r\n  };\r\n\r\n  const handleEndDateChange = (event) => {\r\n    setEndDate(event.target.value);\r\n  };\r\n\r\n  const handleSearch = (event) => {\r\n    event.preventDefault();\r\n    props.filter({ activity, startDate, endDate });\r\n  };\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <h2>Filter your activities</h2>\r\n      <form onSubmit={handleSearch}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"search\"\r\n            placeholder=\"Search by activity\"\r\n            value={activity}\r\n            onChange={handleActivityChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"date\"\r\n            placeholder=\"Search by Start Date\"\r\n            value={startDate}\r\n            onChange={handleStartDateChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"date\"\r\n            placeholder=\"Search by End Date\"\r\n            value={endDate}\r\n            onChange={handleEndDateChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button>Search</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    filter(search) {\r\n      dispatch(searchActivities(search));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Search);\r\n","import React from \"react\";\r\nimport \"components/loader/loader-styles.scss\";\r\n\r\nexport default () => (\r\n  <div className=\"lds-ring\">\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n  </div>\r\n);\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport Search from \"components/search/search-component\";\r\nimport Loader from \"components/loader/loader-component\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport \"pages/list-activity/list-activity-styles.scss\";\r\nimport {\r\n  deleteActivityBegin,\r\n  fetchActivitiesBegin,\r\n} from \"redux/actions/listActivityAction\";\r\n\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { getActivityBegin } from \"redux/actions/saveActivityAction\";\r\n\r\nconst ListActivity = (props) => {\r\n  useEffect(() => {\r\n    props.fetchActivities();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"list-activity\">\r\n      {props.loading && <Loader />}\r\n      <Search />\r\n      <h2>List of activities</h2>\r\n      <div className=\"activity-container\">\r\n        <div className=\"col\">Activity Title</div>\r\n        <div className=\"col\">Description</div>\r\n        <div className=\"col\">Activity Date</div>\r\n        <div className=\"col\">Actions</div>\r\n        {props.activities &&\r\n          props.activities.map((activity) => {\r\n            return (\r\n              <Fragment key={activity.id}>\r\n                <div>{activity.activity}</div>\r\n                <div>{activity.description}</div>\r\n                <div>{activity.date}</div>\r\n                <div className=\"links\">\r\n                  <Link\r\n                    to=\"#\"\r\n                    onClick={() => {\r\n                      props.beginGetActivity(activity.id);\r\n                      props.history.push(`/edit/${activity.id}`);\r\n                    }}\r\n                  >\r\n                    Edit |{\" \"}\r\n                  </Link>\r\n                  <Link\r\n                    to=\"#\"\r\n                    onClick={() => {\r\n                      if (\r\n                        window.confirm(\r\n                          \"Are you sure you want to delete this activity?\"\r\n                        )\r\n                      ) {\r\n                        // Raise delete action\r\n                        props.deleteActivity(activity.id);\r\n                        if (!props.pending && props.error) {\r\n                          toast.error(props.error, {\r\n                            position: \"top-center\",\r\n                            autoClose: 5000,\r\n                            hideProgressBar: false,\r\n                            closeOnClick: true,\r\n                            pauseOnHover: true,\r\n                            draggable: true,\r\n                            progress: undefined,\r\n                          });\r\n                        } else {\r\n                          toast.success(\"Activity deleted successfully!\", {\r\n                            position: \"top-center\",\r\n                            autoClose: 5000,\r\n                            hideProgressBar: false,\r\n                            closeOnClick: true,\r\n                            pauseOnHover: true,\r\n                            draggable: true,\r\n                            progress: undefined,\r\n                          });\r\n                        }\r\n                      }\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </Link>\r\n                </div>\r\n              </Fragment>\r\n            );\r\n          })}\r\n      </div>\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  listActivity: { activities, error, loading, pending },\r\n}) => {\r\n  return {\r\n    activities,\r\n    error,\r\n    loading,\r\n    pending,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchActivities() {\r\n      dispatch(fetchActivitiesBegin());\r\n    },\r\n    deleteActivity(id) {\r\n      dispatch(deleteActivityBegin(id));\r\n    },\r\n    beginGetActivity(id) {\r\n      dispatch(getActivityBegin(id));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListActivity);\r\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { authentication } from \"firebase/config\";\nimport Header from \"components/header/header-component\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport SaveActivity from \"pages/save-activity/save-activity-component\";\nimport ListActivity from \"pages/list-activity/list-activity-component\";\nimport \"App.css\";\nimport {  loginBegin } from \"redux/actions/loginAction\";\n\nfunction App({ isLoggedIn, login }) {\n  useEffect(() => {\n    authentication.onAuthStateChanged(function (user) {\n      if (user) {\n        // User is signed in.\n        login({\n          email: user.email,\n          displayName: user.displayName,\n          phoneNumber: user.phoneNumber,\n          uid: user.uid,\n        });\n        // ...\n      } else {\n        // User is signed out.\n        // ...\n        console.log(\"user is not logged in\");\n      }\n    });\n  },[]);\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Header />\n        <Route\n          path=\"/create\"\n          render={(props) => (isLoggedIn ? <SaveActivity {...props}/> : <h1>Please login</h1>)}\n        />\n        <Route\n          exact\n          path=\"/\"\n          render={(props) => (isLoggedIn ? <ListActivity {...props}/> : <h1>Please login</h1>)}\n        />\n        <Route\n          exact\n          path=\"/edit/:id\"\n          render={(props) => (isLoggedIn ? <SaveActivity {...props} /> : <h1>Please login</h1>)}\n        />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nconst mapStateToProps = ({ login }) => {\n  return {\n    isLoggedIn: login.isLoggedIn,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    login(user) {\n      dispatch(loginBegin(user));\n    },\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\r\n  GET_ACTIVITY_BEGIN,\r\n  GET_ACTIVITY_FAILURE,\r\n  GET_ACTIVITY_SUCCESS,\r\n  SAVE_ACTIVITIES_BEGIN,\r\n  SAVE_ACTIVITIES_FAILURE,\r\n  SAVE_ACTIVITIES_SUCCESS,\r\n} from \"redux/actions/constants\";\r\n\r\nconst initialState = {\r\n  error: \"\",\r\n  pending: false,\r\n  activity: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SAVE_ACTIVITIES_BEGIN:\r\n    case GET_ACTIVITY_BEGIN:\r\n      return {\r\n        ...state,\r\n        error: \"\",\r\n        pending: true,\r\n        activity: [],\r\n      };\r\n    case SAVE_ACTIVITIES_FAILURE:\r\n    case GET_ACTIVITY_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        pending: false,\r\n      };\r\n    case SAVE_ACTIVITIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: \"\",\r\n        pending: false,\r\n        activity: [],\r\n      };\r\n    case GET_ACTIVITY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: \"\",\r\n        pending: false,\r\n        activity: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  FETCH_ACTIVITIES_SUCCESS,\r\n  FETCH_ACTIVITIES_FAILURE,\r\n  FETCH_ACTIVITIES_BEGIN,\r\n  SEARCH_ACTIVITY,\r\n  DELETE_ACTIVITY_BEGIN,\r\n  DELETE_ACTIVITY_SUCCESS,\r\n  DELETE_ACTIVITY_FAILURE,\r\n} from \"redux/actions/constants\";\r\n\r\nconst initialState = {\r\n  activities: [],\r\n  error: \"\",\r\n  loading: false,\r\n  pending: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SEARCH_ACTIVITY:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case FETCH_ACTIVITIES_BEGIN:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case FETCH_ACTIVITIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        activities: action.payload,\r\n        error: \"\",\r\n        loading: false,\r\n      };\r\n\r\n    case FETCH_ACTIVITIES_FAILURE:\r\n      return {\r\n        ...state,\r\n        activities: [],\r\n        error: action.payload,\r\n        loading: false,\r\n      };\r\n\r\n    case DELETE_ACTIVITY_BEGIN:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: \"\",\r\n        pending: true,\r\n      };\r\n\r\n    case DELETE_ACTIVITY_SUCCESS:\r\n      const activities = state.activities.filter((activity) => {\r\n        return activity.id !== action.payload;\r\n      });\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: \"\",\r\n        activities,\r\n        pending: false,\r\n      };\r\n\r\n    case DELETE_ACTIVITY_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n        pending: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  LOGIN_BEGIN,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILURE, LOGOUT_BEGIN\r\n} from \"redux/actions/constants\";\r\n\r\nconst initialState = {\r\n  isLoggedIn: false,\r\n  user: null,\r\n  pending: false,\r\n  error: null,\r\n};\r\n\r\nconst loginReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_BEGIN:\r\n    case LOGOUT_BEGIN:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        pending: true,\r\n        isLoggedIn: false,\r\n        error: \"\",\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        pending: false,\r\n        isLoggedIn: true,\r\n        error: \"\",\r\n      };\r\n    case LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        pending: false,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default loginReducer;","import { combineReducers } from \"redux\";\r\nimport saveActivity from \"redux/reducers/saveActivityReducer\";\r\nimport listActivity from \"redux/reducers/listActivityReducer\";\r\nimport login from \"redux/reducers/loginReducer\";\r\n\r\nexport default combineReducers({\r\n  saveActivity,\r\n  listActivity,\r\n  login,\r\n});\r\n","import { takeLatest, select } from \"redux-saga/effects\";\r\nimport {\r\n  DELETE_ACTIVITY_BEGIN,\r\n  FETCH_ACTIVITIES_BEGIN,\r\n  GET_ACTIVITY_BEGIN,\r\n  LOGIN_BEGIN,\r\n  SAVE_ACTIVITIES_BEGIN,\r\n  SEARCH_ACTIVITY,\r\n} from \"redux/actions/constants\";\r\nimport { firestore } from \"firebase/config\";\r\nimport { put } from \"redux-saga/effects\";\r\nimport {\r\n  getActivityFailure,\r\n  getActivitySuccess,\r\n  saveActivityFailure,\r\n  saveActivitySuccess,\r\n} from \"redux/actions/saveActivityAction\";\r\nimport {\r\n  fetchActivitiesSuccess,\r\n  fetchActivitiesFailure,\r\n  deleteActivityFailure,\r\n  deleteActivitySuccess,\r\n} from \"redux/actions/listActivityAction\";\r\nimport { loginFailure, loginSuccess } from \"redux/actions/loginAction\";\r\n\r\nfunction* fetchActivity() {\r\n  try {\r\n    const state = yield select();\r\n    const { login: {user: {uid}} } = state;\r\n    const docRef = yield firestore\r\n      .collection(\"activities\")\r\n      .orderBy(\"date\", \"desc\")\r\n      .where(\"userId\", \"==\", uid)\r\n      .get();\r\n    const activities = [];\r\n    docRef.forEach((doc) => {\r\n      const activity = doc.data();\r\n      activities.push({ id: doc.id, ...activity });\r\n    });\r\n    yield put(fetchActivitiesSuccess(activities));\r\n  } catch (error) {\r\n    yield put(fetchActivitiesFailure(error));\r\n  }\r\n}\r\n\r\nfunction* saveActivity({ payload, history }) {\r\n  try {\r\n    const state = yield select();\r\n    const { login: {user: {uid}} } = state;\r\n    if (payload.id) {\r\n      // update\r\n      const docRef = yield firestore.collection(\"activities\").doc(payload.id);\r\n      yield docRef.update({\r\n        activity: payload.activity,\r\n        description: payload.description,\r\n        date: payload.date,\r\n      });\r\n    } else {\r\n      // create\r\n      yield firestore.collection(\"activities\").add({\r\n        activity: payload.activity,\r\n        description: payload.description,\r\n        date: payload.date,\r\n        userId: uid,\r\n      });\r\n    }\r\n    yield put(saveActivitySuccess());\r\n    history.push(\"/\");\r\n  } catch (error) {\r\n    yield put(saveActivityFailure(error));\r\n  }\r\n}\r\n\r\nfunction* searchActivity({ payload }) {\r\n  try {\r\n    const state = yield select();\r\n    const { login: {user: {uid}} } = state;\r\n\r\n    const { startDate, endDate, activity } = payload;\r\n    let docRef = firestore.collection(\"activities\");\r\n\r\n    if (startDate) {\r\n      docRef = docRef.where(\"date\", \">=\", startDate);\r\n    }\r\n    if (endDate) {\r\n      docRef = docRef.where(\"date\", \"<=\", endDate);\r\n    }\r\n    if (activity) {\r\n      docRef = docRef.where(\"activity\", \"==\", activity);\r\n    }\r\n    docRef = yield docRef.where(\"userId\", \"==\", uid).get();\r\n    const activities = [];\r\n    docRef.forEach((doc) => {\r\n      const activity = doc.data();\r\n      activities.push(activity);\r\n    });\r\n    yield put(fetchActivitiesSuccess(activities));\r\n  } catch (error) {\r\n    yield put(fetchActivitiesFailure(error));\r\n  }\r\n}\r\n\r\nfunction* deleteActivity(data) {\r\n  try {\r\n    const state = yield select();\r\n    const { login: {user: {uid}} } = state;\r\n\r\n    yield firestore.collection(\"activities\").doc(data.payload).where(\"userId\", \"==\", uid).delete();\r\n    yield put(deleteActivitySuccess(data.payload));\r\n  } catch (error) {\r\n    yield put(deleteActivityFailure(error));\r\n  }\r\n}\r\n\r\nfunction* getActivity({ payload }) {\r\n  try {\r\n    const docRef = yield firestore.collection(\"activities\").doc(payload).get();\r\n    yield put(getActivitySuccess({ ...docRef.data(), id: docRef.id }));\r\n  } catch (error) {\r\n    yield put(getActivityFailure(error));\r\n  }\r\n}\r\n\r\nfunction* getLogin({ payload }) {\r\n  try {\r\n    const user = yield firestore.collection(\"users\").doc(payload.uid).get();\r\n    if (!user.exists) {\r\n      yield firestore.collection(\"users\").doc(payload.uid).set({\r\n        email: payload.email,\r\n        displayName: payload.displayName,\r\n        phoneNumber: payload.phoneNumber,\r\n        photoURL: payload.photoURL,\r\n      });\r\n    }\r\n\r\n    yield put(loginSuccess(payload));\r\n  } catch (error) {\r\n    yield put(loginFailure(error));\r\n  }\r\n}\r\nfunction* mySaga() {\r\n  yield takeLatest(FETCH_ACTIVITIES_BEGIN, fetchActivity);\r\n  yield takeLatest(SAVE_ACTIVITIES_BEGIN, saveActivity);\r\n  yield takeLatest(SEARCH_ACTIVITY, searchActivity);\r\n  yield takeLatest(DELETE_ACTIVITY_BEGIN, deleteActivity);\r\n  yield takeLatest(GET_ACTIVITY_BEGIN, getActivity);\r\n  yield takeLatest(LOGIN_BEGIN, getLogin);\r\n}\r\n\r\nexport default mySaga;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"App\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer  from 'redux/reducers';\nimport createSagaMiddleware from 'redux-saga';\nimport saga from 'redux/sagas';\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(saga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}